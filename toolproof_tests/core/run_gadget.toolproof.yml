name: Run the Gadget library
type: reference

steps:
  - step: I have a "package.json" file with the content {json}
    json: |-
      {
        "name": "gadget-test-env",
        "type": "module",
        "private": "true",
        "dependencies": {
          "@cloudcannon/gadget": "file:%gadget_dir%",
          "tsx": "^4.20.4",
          "js-yaml": "^4.1.0",
          "fdir": "^6.1.1"
        },
        "scripts": {
          "go": "tsx gadget.js"
        }
      }
  - step: I have a "gadget.js" file with the content {js}
    js: |-
      import { fdir } from 'fdir';
      import { readFile } from 'fs/promises';
      import { generateConfiguration } from '@cloudcannon/gadget';
      import yaml from 'js-yaml';

      const crawler = new fdir().withRelativePaths().withFullPaths();
      const filePaths = await crawler.crawl("src").withPromise();
      filePaths.sort();

      const ccConfig = filePaths.includes('cloudcannon.config.yml')
        ? yaml.load(await readFile('src/cloudcannon.config.yml'))
        : undefined;

      const config = await generateConfiguration(filePaths, {
        readFile: (path) => path ? readFile('src/' + path) : '',
        config: { ...ccConfig, timezone: 'Pacific/Auckland' }
      });

      console.log(JSON.stringify(config, undefined, 2));
  - I run "npm i"
  - I run "npm -s run go"
